package simulation

/** 
 * 
 */

import io.sarl.core.DefaultContextInteractions
import io.sarl.core.Initialize
import io.sarl.core.Lifecycle

import car.ControlVirtualCarAgent

import view.SimulationViewAgent
import driver.DriverAgent
import view.SimulationView
import io.sarl.util.OpenEventSpaceSpecification
import java.util.UUID

/** 
 * @author alombard
 * 
 */
agent Boot {
	uses DefaultContextInteractions, Lifecycle
	
	on Initialize {
		// Create global spaces
		val modelViewSpace = defaultContext.getOrCreateSpaceWithSpec(typeof(OpenEventSpaceSpecification), UUID.randomUUID())
		
		// Boot agents
		spawn(SimulationViewAgent, modelViewSpace)
		
		synchronized (SimulationView) {
			SimulationView.wait
		}
		
		// Spawn vehicles
		val internalVehicleSpace = defaultContext.getOrCreateSpaceWithSpec(typeof(OpenEventSpaceSpecification), UUID.randomUUID())
		
		spawn(DriverAgent, internalVehicleSpace)
		spawn(ControlVirtualCarAgent, internalVehicleSpace, modelViewSpace)
		
		killMe
	}
}
